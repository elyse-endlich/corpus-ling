# GenZSearchResults.txt <- scan("GenZSearchResults.txt", what="c")
# MillennialSearchResults.txt <- scan("MillennialSearchResults.txt", what="c")
# GoogleScholar.txt <- scan("GoogleScholar.txt", what="c")
# BoomerTweets <- grep("[0-9]", BoomerTweets, value=T, invert=T)
# BoomerTweets.txt <- gsub("[^a-zA-Z ]", "", BoomerTweets.txt)
# corpus?? maybe not
# BoomerTweets_corpus <- makecorpus(BoomerTweets)
# MillennialTweets_corpus <- makecorpus(MillennialTweets)
# GenZTweets_corpus <- makecorpus(GenZTweets)
# BoomerTweets_corpus <- removestopwords(BoomerTweets_corpus)
# MillennialTweets_corpus <- removestopwords(MillennialTweets_corpus)
# GenZTweets_corpus <- removestopwords(GenZTweets_corpus)
# data.frame(text = sapply(myCorpus, as.character), stringsAsFactors = FALSE)
# rm(list=ls())
# setwd("~/FALL SEMESTER 2019/Corpus Linguistics/Final project")
# install.packages("tm")
# library(tm)
# FUNCTIONS
removeURL <- function(x) gsub("http[^[:space:]]*", "", x)
removeTwitterlinks <- function(x) gsub("pic.twitter.com[^[:space:]]*", "", x)
tweetcolumns <- function(x) x[,c("Content")]
searchcolumns <- function(x) x[,c("ï..Title","Description")]
fixpunct <- function(x) {
x <- gsub("â","'",x)
x <- gsub("â","'",x)
x <- gsub("â",'"',x)
x <- gsub("â",'"',x)
x <- gsub("â",'',x)
x <- gsub("&","and",x)
x <- tolower(x)
x <- gsub("[0-9]+ hours ago","",x)
x <- gsub("[0-9]+ days ago","",x)
x <- gsub("[^a-zA-Z ']","",x)
x <- gsub("gen z", "genz",x)
x <- gsub("gen x", "genx",x)
x <- gsub("gen y", "geny",x)
x <- gsub("generation z", "generationz",x)
x <- gsub("generation x", "generationx",x)
x <- gsub("generation y", "generationy",x)
x <- gsub("itdon't", "it don't",x)
x <- gsub("'ok boomer'", "ok boomer",x)
x <- gsub("'okay boomer'", "okay boomer",x)
x <- gsub("millennialif", "millennial if",x)
x <- gsub("genzif", "genz if",x)
x <- gsub("boomerboomers", "boomer boomers",x)
x <- gsub("bigchampionship", "big championship",x)
x <- gsub("netneutrality", "net neutrality",x)
x <- gsub("boomerme", "boomer me",x)
x <- gsub("jan ", "",x)
x <- gsub("feb ", "",x)
x <- gsub("aug ", "",x)
x <- gsub("apr ", "",x)
x <- gsub("jun ", "",x)
x <- gsub("jul ", "",x)
x <- gsub("sep ", "",x)
x <- gsub("oct ", "",x)
x <- gsub("nov ", "",x)
x <- gsub("dec ", "",x)
x <- gsub("mar ", "",x)
x <- gsub("giftgiving", "gift giving",x)
x <- gsub("tik tok", "tiktok",x)
x <- gsub("millennialgenz", "millennial genz",x)
x <- gsub("millennialsgenz", "millennials genz",x)
x <- gsub("pdfpdf", "pdf pdf",x)
x <- gsub("bookb", "book b",x)
x <- gsub("citationc", "citation c",x)
x <- gsub("themillennialbiz", "the millennial biz",x)
} # fixing punctuation and various errors
preptweets <- function(x) {
x <- tweetcolumns(x)
x <- removeURL(x)
x <- removeTwitterlinks(x)
x <- fixpunct(x)
}
# makecorpus <- function(x) Corpus(VectorSource(as.vector(x)))
# removestopwords <- function (x) tm_map(x, removeWords, stopwords("english"))
###
# load files
BoomerTweets <- read.csv("BoomerTweets.csv", header=T)
BoomerSearchResults <- read.csv("Boomer Search result lists.csv", header=T)
GenZTweets <- read.csv("GenZTweets.csv", header=T)
GenZSearchResults <- read.csv("Gen Z Search result lists.csv", header=T)
MillennialTweets <- read.csv("MillennialTweets.csv", header=T)
MillennialSearchResults <- read.csv("Millennial Search result lists.csv", header=T)
GoogleScholar <- read.csv("All three Article lists.csv", header=T)
# prepare files
BoomerTweets <- preptweets(BoomerTweets)
GenZTweets <- preptweets(GenZTweets)
GenZTweets <- gsub("gen z", "genz", GenZTweets)
MillennialTweets <- preptweets(MillennialTweets)
BoomerSearchResults <- searchcolumns(BoomerSearchResults)
GenZSearchResults <- searchcolumns(GenZSearchResults)
MillennialSearchResults <- searchcolumns(MillennialSearchResults)
GoogleScholar <- searchcolumns(GoogleScholar)
BoomerSearchResults$ï..Title <- fixpunct(BoomerSearchResults$ï..Title)
BoomerSearchResults$Description <- fixpunct(BoomerSearchResults$Description)
GenZSearchResults$ï..Title <- fixpunct(GenZSearchResults$ï..Title)
GenZSearchResults$Description <- fixpunct(GenZSearchResults$Description)
MillennialSearchResults$ï..Title <- fixpunct(MillennialSearchResults$ï..Title)
MillennialSearchResults$Description <- fixpunct(MillennialSearchResults$Description)
GoogleScholar$ï..Title <- fixpunct(GoogleScholar$ï..Title)
GoogleScholar$Description <- fixpunct(GoogleScholar$Description)
# make bigrams and trigrams
BoomerTweets <- as.data.frame(BoomerTweets)
write.table(BoomerTweets, file = "BoomerTweets.txt", sep = "\n", row.names = FALSE, col.names = FALSE)
BoomerTweets <- scan("BoomerTweets.txt", what="c")
BoomerTweets <- unlist(strsplit(BoomerTweets, "[^a-z'-]"))
BoomerTweets <- grep("[a-z]", BoomerTweets, value=T)
BoomerTweets2 <- BoomerTweets[-1]
BoomerTweets3 <- BoomerTweets2[-1]
BoomerTweets.bi <- paste(BoomerTweets, BoomerTweets2)
BoomerTweets.tri <- paste(BoomerTweets, BoomerTweets2, BoomerTweets3)
# data.frame(head(sort(table(BoomerTweets.bi), decreasing=TRUE), 10))
BoomerTweets.bi.df <- data.frame(sort(table(BoomerTweets.bi), decreasing=TRUE))
BoomerTweets.tri.df <- data.frame(sort(table(BoomerTweets.tri), decreasing=TRUE))
GenZTweets <- as.data.frame(GenZTweets)
write.table(GenZTweets, file = "GenZTweets.txt", sep = "\n", row.names = FALSE, col.names = FALSE)
GenZTweets <- scan("GenZTweets.txt", what="c")
GenZTweets <- unlist(strsplit(GenZTweets, "[^a-z'-]"))
GenZTweets <- grep("[a-z]", GenZTweets, value=T)
GenZTweets2 <- GenZTweets[-1]
GenZTweets3 <- GenZTweets2[-1]
GenZTweets.bi <- paste(GenZTweets, GenZTweets2)
GenZTweets.tri <- paste(GenZTweets, GenZTweets2, GenZTweets3)
GenZTweets.bi.df <- data.frame(sort(table(GenZTweets.bi), decreasing=TRUE))
GenZTweets.tri.df <- data.frame(sort(table(GenZTweets.tri), decreasing=TRUE))
MillennialTweets <- as.data.frame(MillennialTweets)
write.table(MillennialTweets, file = "MillennialTweets.txt", sep = "\n", row.names = FALSE, col.names = FALSE)
MillennialTweets <- scan("MillennialTweets.txt", what="c")
MillennialTweets <- unlist(strsplit(MillennialTweets, "[^a-z'-]"))
MillennialTweets <- grep("[a-z]", MillennialTweets, value=T)
MillennialTweets2 <- MillennialTweets[-1]
MillennialTweets3 <- MillennialTweets2[-1]
MillennialTweets.bi <- paste(MillennialTweets, MillennialTweets2)
MillennialTweets.tri <- paste(MillennialTweets, MillennialTweets2, MillennialTweets3)
MillennialTweets.bi.df <- data.frame(sort(table(MillennialTweets.bi), decreasing=TRUE))
MillennialTweets.tri.df <- data.frame(sort(table(MillennialTweets.tri), decreasing=TRUE))
write.table(BoomerSearchResults, file = "BoomerSearchResults.txt", sep = "\n", row.names = FALSE, col.names = FALSE)
BoomerSearchResults <- scan("BoomerSearchResults.txt", what="c")
BoomerSearchResults <- unlist(strsplit(BoomerSearchResults, "[^a-z'-]"))
BoomerSearchResults <- grep("[a-z]", BoomerSearchResults, value=T)
BoomerSearchResults2 <- BoomerSearchResults[-1]
BoomerSearchResults3 <- BoomerSearchResults2[-1]
BoomerSearchResults.bi <- paste(BoomerSearchResults, BoomerSearchResults2)
BoomerSearchResults.tri <- paste(BoomerSearchResults, BoomerSearchResults2, BoomerSearchResults3)
BoomerSearchResults.bi.df <- data.frame(sort(table(BoomerSearchResults.bi), decreasing=TRUE))
BoomerSearchResults.tri.df <- data.frame(sort(table(BoomerSearchResults.tri), decreasing=TRUE))
write.table(MillennialSearchResults, file = "MillennialSearchResults.txt", sep = "\n", row.names = FALSE, col.names = FALSE)
MillennialSearchResults <- scan("MillennialSearchResults.txt", what="c")
MillennialSearchResults <- unlist(strsplit(MillennialSearchResults, "[^a-z'-]"))
MillennialSearchResults <- grep("[a-z]", MillennialSearchResults, value=T)
MillennialSearchResults2 <- MillennialSearchResults[-1]
MillennialSearchResults3 <- MillennialSearchResults2[-1]
MillennialSearchResults.bi <- paste(MillennialSearchResults, MillennialSearchResults2)
MillennialSearchResults.tri <- paste(MillennialSearchResults, MillennialSearchResults2, MillennialSearchResults3)
MillennialSearchResults.bi.df <- data.frame(sort(table(MillennialSearchResults.bi), decreasing=TRUE))
MillennialSearchResults.tri.df <- data.frame(sort(table(MillennialSearchResults.tri), decreasing=TRUE))
write.table(GenZSearchResults, file = "GenZSearchResults.txt", sep = "\n", row.names = FALSE, col.names = FALSE)
GenZSearchResults <- scan("GenZSearchResults.txt", what="c")
GenZSearchResults <- unlist(strsplit(GenZSearchResults, "[^a-z'-]"))
GenZSearchResults <- grep("[a-z]", GenZSearchResults, value=T)
GenZSearchResults2 <- GenZSearchResults[-1]
GenZSearchResults3 <- GenZSearchResults2[-1]
GenZSearchResults.bi <- paste(GenZSearchResults, GenZSearchResults2)
GenZSearchResults.tri <- paste(GenZSearchResults, GenZSearchResults2, GenZSearchResults3)
GenZSearchResults.bi.df <- data.frame(sort(table(GenZSearchResults.bi), decreasing=TRUE))
GenZSearchResults.tri.df <- data.frame(sort(table(GenZSearchResults.tri), decreasing=TRUE))
write.table(GoogleScholar, file = "GoogleScholar.txt", sep = "\n", row.names = FALSE, col.names = FALSE)
GoogleScholar <- scan("GoogleScholar.txt", what="c")
GoogleScholar <- unlist(strsplit(GoogleScholar, "[^a-z'-]"))
GoogleScholar <- grep("[a-z]", GoogleScholar, value=T)
GoogleScholar2 <- GoogleScholar[-1]
GoogleScholar3 <- GoogleScholar2[-1]
GoogleScholar.bi <- paste(GoogleScholar, GoogleScholar2)
GoogleScholar.tri <- paste(GoogleScholar, GoogleScholar2, GoogleScholar3)
GoogleScholar.bi.df <- data.frame(sort(table(GoogleScholar.bi), decreasing=TRUE))
GoogleScholar.tri.df <- data.frame(sort(table(GoogleScholar.tri), decreasing=TRUE))
##
## MUTUAL INFORMATION ##
# Compile a frequency table of unigram tokens
BoomerTweets.cnt <- sort(table(BoomerTweets), decreasing=T)
GenZTweets.cnt <- sort(table(GenZTweets), decreasing=T)
MillennialTweets.cnt <- sort(table(MillennialTweets), decreasing=T)
BoomerSearchResults.cnt <- sort(table(BoomerSearchResults), decreasing=T)
GenZSearchResults.cnt <- sort(table(GenZSearchResults), decreasing=T)
MillennialSearchResults.cnt <- sort(table(MillennialSearchResults), decreasing=T)
GoogleScholar.cnt <- sort(table(GoogleScholar), decreasing=T)
# Compile a frequency table of bigrams
BoomerTweets.bicnt <- sort(table(BoomerTweets.bi), decreasing=T)
GenZTweets.bicnt <- sort(table(GenZTweets.bi), decreasing=T)
MillennialTweets.bicnt <- sort(table(MillennialTweets.bi), decreasing=T)
BoomerSearchResults.bicnt <- sort(table(BoomerSearchResults.bi), decreasing=T)
GenZSearchResults.bicnt <- sort(table(GenZSearchResults.bi), decreasing=T)
MillennialSearchResults.bicnt <- sort(table(MillennialSearchResults.bi), decreasing=T)
GoogleScholar.bicnt <- sort(table(GoogleScholar.bi), decreasing=T)
BoomerTweets.bicnt <- data.frame(BoomerTweets.bicnt)
GenZTweets.bicnt <- data.frame(GenZTweets.bicnt)
MillennialTweets.bicnt <- data.frame(MillennialTweets.bicnt)
BoomerSearchResults.bicnt <- data.frame(BoomerSearchResults.bicnt)
GenZSearchResults.bicnt <- data.frame(GenZSearchResults.bicnt)
MillennialSearchResults.bicnt <- data.frame(MillennialSearchResults.bicnt)
GoogleScholar.bicnt <- data.frame(GoogleScholar.bicnt)
BoomerTweets.bicnt$BoomerTweets.bi <- as.character(BoomerTweets.bicnt$BoomerTweets.bi)
GenZTweets.bicnt$GenZTweets.bi <- as.character(GenZTweets.bicnt$GenZTweets.bi)
MillennialTweets.bicnt$MillennialTweets.bi <- as.character(MillennialTweets.bicnt$MillennialTweets.bi)
BoomerSearchResults.bicnt$BoomerSearchResults.bi <- as.character(BoomerSearchResults.bicnt$BoomerSearchResults.bi)
GenZSearchResults.bicnt$GenZSearchResults.bi <- as.character(GenZSearchResults.bicnt$GenZSearchResults.bi)
MillennialSearchResults.bicnt$MillennialSearchResults.bi <- as.character(MillennialSearchResults.bicnt$MillennialSearchResults.bi)
GoogleScholar.bicnt$GoogleScholar.bi <- as.character(GoogleScholar.bicnt$GoogleScholar.bi)
# Compile a frequency list of trigrams
BoomerTweets.tricnt <- sort(table(BoomerTweets.tri), decreasing=T)
GenZTweets.tricnt <- sort(table(GenZTweets.tri), decreasing=T)
MillennialTweets.tricnt <- sort(table(MillennialTweets.tri), decreasing=T)
BoomerSearchResults.tricnt <- sort(table(BoomerSearchResults.tri), decreasing=T)
GenZSearchResults.tricnt <- sort(table(GenZSearchResults.tri), decreasing=T)
MillennialSearchResults.tricnt <- sort(table(MillennialSearchResults.tri), decreasing=T)
GoogleScholar.tricnt <- sort(table(GoogleScholar.tri), decreasing=T)
BoomerTweets.tricnt <- data.frame(BoomerTweets.tricnt)
GenZTweets.tricnt <- data.frame(GenZTweets.tricnt)
MillennialTweets.tricnt <- data.frame(MillennialTweets.tricnt)
BoomerSearchResults.tricnt <- data.frame(BoomerSearchResults.tricnt)
GenZSearchResults.tricnt <- data.frame(GenZSearchResults.tricnt)
MillennialSearchResults.tricnt <- data.frame(MillennialSearchResults.tricnt)
GoogleScholar.tricnt <- data.frame(GoogleScholar.tricnt)
BoomerTweets.tricnt$BoomerTweets.tri <- as.character(BoomerTweets.tricnt$BoomerTweets.tri)
GenZTweets.tricnt$GenZTweets.tri <- as.character(GenZTweets.tricnt$GenZTweets.tri)
MillennialTweets.tricnt$MillennialTweets.tri <- as.character(MillennialTweets.tricnt$MillennialTweets.tri)
BoomerSearchResults.tricnt$BoomerSearchResults.tri <- as.character(BoomerSearchResults.tricnt$BoomerSearchResults.tri)
GenZSearchResults.tricnt$GenZSearchResults.tri <- as.character(GenZSearchResults.tricnt$GenZSearchResults.tri)
MillennialSearchResults.tricnt$MillennialSearchResults.tri <- as.character(MillennialSearchResults.tricnt$MillennialSearchResults.tri)
GoogleScholar.tricnt$GoogleScholar.tri <- as.character(GoogleScholar.tricnt$GoogleScholar.tri)
# Compute N, the total number of tokens
N_BT <- as.double(length(BoomerTweets))
N_GZT <- as.double(length(GenZTweets))
N_MLT <- as.double(length(MillennialTweets))
N_BSR <- as.double(length(BoomerSearchResults))
N_GZSR <- as.double(length(GenZSearchResults))
N_MLSR <- as.double(length(MillennialSearchResults))
N_GS <- as.double(length(GoogleScholar))
# Get the components (first and second words) of the bigram frequency table
BTbigrams <- strsplit(BoomerTweets.bicnt$BoomerTweets.bi, " ")
BTbigrams <- matrix(unlist(BTbigrams),ncol=2,byrow=T)
GZTbigrams <- strsplit(GenZTweets.bicnt$GenZTweets.bi, " ")
GZTbigrams <- matrix(unlist(GZTbigrams),ncol=2,byrow=T)
MLTbigrams <- strsplit(MillennialTweets.bicnt$MillennialTweets.bi, " ")
MLTbigrams <- matrix(unlist(MLTbigrams),ncol=2,byrow=T)
BSRbigrams <- strsplit(BoomerSearchResults.bicnt$BoomerSearchResults.bi, " ")
BSRbigrams <- matrix(unlist(BSRbigrams),ncol=2,byrow=T)
GZSRbigrams <- strsplit(GenZSearchResults.bicnt$GenZSearchResults.bi, " ")
GZSRbigrams <- matrix(unlist(GZSRbigrams),ncol=2,byrow=T)
MLSRbigrams <- strsplit(MillennialSearchResults.bicnt$MillennialSearchResults.bi, " ")
MLSRbigrams <- matrix(unlist(MLSRbigrams),ncol=2,byrow=T)
GSbigrams <- strsplit(GoogleScholar.bicnt$GoogleScholar.bi, " ")
GSbigrams <- matrix(unlist(GSbigrams),ncol=2,byrow=T)
# Build a data frame w/ individual words, the bigram together, and the bigram's count
BoomerTweets.bicnt <- cbind(BTbigrams, BoomerTweets.bicnt)
colnames(BoomerTweets.bicnt) <- c("tok1", "tok2", "bigram", "bi.cnt")
BoomerTweets.bicnt$tok1 <- as.character(BoomerTweets.bicnt$tok1)
BoomerTweets.bicnt$tok2 <- as.character(BoomerTweets.bicnt$tok2)
GenZTweets.bicnt <- cbind(GZTbigrams, GenZTweets.bicnt)
colnames(GenZTweets.bicnt) <- c("tok1", "tok2", "bigram", "bi.cnt")
GenZTweets.bicnt$tok1 <- as.character(GenZTweets.bicnt$tok1)
GenZTweets.bicnt$tok2 <- as.character(GenZTweets.bicnt$tok2)
MillennialTweets.bicnt <- cbind(MLTbigrams, MillennialTweets.bicnt)
colnames(MillennialTweets.bicnt) <- c("tok1", "tok2", "bigram", "bi.cnt")
MillennialTweets.bicnt$tok1 <- as.character(MillennialTweets.bicnt$tok1)
MillennialTweets.bicnt$tok2 <- as.character(MillennialTweets.bicnt$tok2)
BoomerSearchResults.bicnt <- cbind(BSRbigrams, BoomerSearchResults.bicnt)
colnames(BoomerSearchResults.bicnt) <- c("tok1", "tok2", "bigram", "bi.cnt")
BoomerSearchResults.bicnt$tok1 <- as.character(BoomerSearchResults.bicnt$tok1)
BoomerSearchResults.bicnt$tok2 <- as.character(BoomerSearchResults.bicnt$tok2)
GenZSearchResults.bicnt <- cbind(GZSRbigrams, GenZSearchResults.bicnt)
colnames(GenZSearchResults.bicnt) <- c("tok1", "tok2", "bigram", "bi.cnt")
GenZSearchResults.bicnt$tok1 <- as.character(GenZSearchResults.bicnt$tok1)
GenZSearchResults.bicnt$tok2 <- as.character(GenZSearchResults.bicnt$tok2)
MillennialSearchResults.bicnt <- cbind(MLSRbigrams, MillennialSearchResults.bicnt)
colnames(MillennialSearchResults.bicnt) <- c("tok1", "tok2", "bigram", "bi.cnt")
MillennialSearchResults.bicnt$tok1 <- as.character(MillennialSearchResults.bicnt$tok1)
MillennialSearchResults.bicnt$tok2 <- as.character(MillennialSearchResults.bicnt$tok2)
GoogleScholar.bicnt <- cbind(GSbigrams, GoogleScholar.bicnt)
colnames(GoogleScholar.bicnt) <- c("tok1", "tok2", "bigram", "bi.cnt")
GoogleScholar.bicnt$tok1 <- as.character(GoogleScholar.bicnt$tok1)
GoogleScholar.bicnt$tok2 <- as.character(GoogleScholar.bicnt$tok2)
# Add unigram frequencies for each of the separate words to data frame
BoomerTweets.bicnt$cnt.1 <- sapply( BoomerTweets.bicnt$tok1, function(x) BoomerTweets.cnt[x] )
BoomerTweets.bicnt$cnt.2 <- sapply( BoomerTweets.bicnt$tok2, function(x) BoomerTweets.cnt[x] )
GenZTweets.bicnt$cnt.1 <- sapply( GenZTweets.bicnt$tok1, function(x) GenZTweets.cnt[x] )
GenZTweets.bicnt$cnt.2 <- sapply( GenZTweets.bicnt$tok2, function(x) GenZTweets.cnt[x] )
MillennialTweets.bicnt$cnt.1 <- sapply( MillennialTweets.bicnt$tok1, function(x) MillennialTweets.cnt[x] )
MillennialTweets.bicnt$cnt.2 <- sapply( MillennialTweets.bicnt$tok2, function(x) MillennialTweets.cnt[x] )
BoomerSearchResults.bicnt$cnt.1 <- sapply( BoomerSearchResults.bicnt$tok1, function(x) BoomerSearchResults.cnt[x] )
BoomerSearchResults.bicnt$cnt.2 <- sapply( BoomerSearchResults.bicnt$tok2, function(x) BoomerSearchResults.cnt[x] )
GenZSearchResults.bicnt$cnt.1 <- sapply( GenZSearchResults.bicnt$tok1, function(x) GenZSearchResults.cnt[x] )
GenZSearchResults.bicnt$cnt.2 <- sapply( GenZSearchResults.bicnt$tok2, function(x) GenZSearchResults.cnt[x] )
MillennialSearchResults.bicnt$cnt.1 <- sapply( MillennialSearchResults.bicnt$tok1, function(x) MillennialSearchResults.cnt[x] )
MillennialSearchResults.bicnt$cnt.2 <- sapply( MillennialSearchResults.bicnt$tok2, function(x) MillennialSearchResults.cnt[x] )
GoogleScholar.bicnt$cnt.1 <- sapply( GoogleScholar.bicnt$tok1, function(x) GoogleScholar.cnt[x] )
GoogleScholar.bicnt$cnt.2 <- sapply( GoogleScholar.bicnt$tok2, function(x) GoogleScholar.cnt[x] )
# Define a function to calculate Mutual Information
BTMI <- function(bi.cnt,cnt.1,cnt.2) { log2((N_BT*bi.cnt)/(as.double(cnt.1)*cnt.2)) } # mutual information formula
GZTMI <- function(bi.cnt,cnt.1,cnt.2) { log2((N_GZT*bi.cnt)/(as.double(cnt.1)*cnt.2)) } # mutual information formula
MLTMI <- function(bi.cnt,cnt.1,cnt.2) { log2((N_MLT*bi.cnt)/(as.double(cnt.1)*cnt.2)) } # mutual information formula
BSRMI <- function(bi.cnt,cnt.1,cnt.2) { log2((N_BSR*bi.cnt)/(as.double(cnt.1)*cnt.2)) } # mutual information formula
GZSRMI <- function(bi.cnt,cnt.1,cnt.2) { log2((N_GZSR*bi.cnt)/(as.double(cnt.1)*cnt.2)) } # mutual information formula
MLSRMI <- function(bi.cnt,cnt.1,cnt.2) { log2((N_MLSR*bi.cnt)/(as.double(cnt.1)*cnt.2)) } # mutual information formula
GSMI <- function(bi.cnt,cnt.1,cnt.2) { log2((N_GS*bi.cnt)/(as.double(cnt.1)*cnt.2)) } # mutual information formula
# ... and apply it to each bigram, using the three components of the calculation
BoomerTweets.bicnt$MI <- with(BoomerTweets.bicnt, mapply(BTMI, bi.cnt, cnt.1, cnt.2))
GenZTweets.bicnt$MI <- with(GenZTweets.bicnt, mapply(GZTMI, bi.cnt, cnt.1, cnt.2))
MillennialTweets.bicnt$MI <- with(MillennialTweets.bicnt, mapply(MLTMI, bi.cnt, cnt.1, cnt.2))
BoomerSearchResults.bicnt$MI <- with(BoomerSearchResults.bicnt, mapply(BSRMI, bi.cnt, cnt.1, cnt.2))
GenZSearchResults.bicnt$MI <- with(GenZSearchResults.bicnt, mapply(GZSRMI, bi.cnt, cnt.1, cnt.2))
MillennialSearchResults.bicnt$MI <- with(MillennialSearchResults.bicnt, mapply(MLSRMI, bi.cnt, cnt.1, cnt.2))
GoogleScholar.bicnt$MI <- with(GoogleScholar.bicnt, mapply(GSMI, bi.cnt, cnt.1, cnt.2))
# Put the data frame in order by MI and look at the top of the table
BoomerTweets.bicnt <- BoomerTweets.bicnt[ order(BoomerTweets.bicnt$MI, decreasing=T), ]
GenZTweets.bicnt <- GenZTweets.bicnt[ order(GenZTweets.bicnt$MI, decreasing=T), ]
MillennialTweets.bicnt <- MillennialTweets.bicnt[ order(MillennialTweets.bicnt$MI, decreasing=T), ]
BoomerSearchResults.bicnt <- BoomerSearchResults.bicnt[ order(BoomerSearchResults.bicnt$MI, decreasing=T), ]
GenZSearchResults.bicnt <- GenZSearchResults.bicnt[ order(GenZSearchResults.bicnt$MI, decreasing=T), ]
MillennialSearchResults.bicnt <- MillennialSearchResults.bicnt[ order(MillennialSearchResults.bicnt$MI, decreasing=T), ]
GoogleScholar.bicnt <- GoogleScholar.bicnt[ order(GoogleScholar.bicnt$MI, decreasing=T), ]
# save for later
BoomerTweets.N <- N_BT
GenZTweets.N <- N_GZT
MillennialTweets.N <- N_MLT
BoomerSearchResults.N <- N_BSR
GenZSearchResults.N <- N_GZSR
MillennialSearchResults.N <- N_MLSR
GoogleScholar.N <- N_GS
# Excluding rare bigrams from MI ranking (less than 10)
#
BoomerTweetsMIFINAL__df <- head( BoomerTweets.bicnt[ BoomerTweets.bicnt$bi.cnt > 10, ], 20)
GenZTweetsMIFINAL__df <- head( GenZTweets.bicnt[ GenZTweets.bicnt$bi.cnt > 10, ], 20)
MillennialTweetsMIFINAL__df <- head( MillennialTweets.bicnt[ MillennialTweets.bicnt$bi.cnt > 10, ], 20)
BoomerSearchResultsMIFINAL__df <- head( BoomerSearchResults.bicnt[ BoomerSearchResults.bicnt$bi.cnt > 10, ], 20)
GenZSearchResultsMIFINAL__df <- head( GenZSearchResults.bicnt[ GenZSearchResults.bicnt$bi.cnt > 10, ], 20)
MillennialSearchResultsMIFINAL__df <- head( MillennialSearchResults.bicnt[ MillennialSearchResults.bicnt$bi.cnt > 10, ], 20)
GoogleScholarMIFINAL__df <- head( GoogleScholar.bicnt[ GoogleScholar.bicnt$bi.cnt > 10, ], 20)
## T-SCORE ##
BTtscore <- function(bi.cnt,cnt.1,cnt.2,N_BT) { (bi.cnt-(1/N_BT)*cnt.1*cnt.2)/sqrt(bi.cnt) } # t score formula
GZTtscore <- function(bi.cnt,cnt.1,cnt.2,N_GZT) { (bi.cnt-(1/N_GZT)*cnt.1*cnt.2)/sqrt(bi.cnt) } # t score formula
MLTtscore <- function(bi.cnt,cnt.1,cnt.2,N_MLT) { (bi.cnt-(1/N_MLT)*cnt.1*cnt.2)/sqrt(bi.cnt) } # t score formula
BSRtscore <- function(bi.cnt,cnt.1,cnt.2,N_BSR) { (bi.cnt-(1/N_BSR)*cnt.1*cnt.2)/sqrt(bi.cnt) } # t score formula
GZSRtscore <- function(bi.cnt,cnt.1,cnt.2,N_GZSR) { (bi.cnt-(1/N_GZSR)*cnt.1*cnt.2)/sqrt(bi.cnt) } # t score formula
MLSRtscore <- function(bi.cnt,cnt.1,cnt.2,N_MLSR) { (bi.cnt-(1/N_MLSR)*cnt.1*cnt.2)/sqrt(bi.cnt) } # t score formula
GStscore <- function(bi.cnt,cnt.1,cnt.2,N_GS) { (bi.cnt-(1/N_GS)*cnt.1*cnt.2)/sqrt(bi.cnt) } # t score formula
BoomerTweets.bicnt$t <- with(BoomerTweets.bicnt, mapply(BTtscore, bi.cnt, cnt.1, cnt.2, BoomerTweets.N))
BoomerTweets.bicnt <- BoomerTweets.bicnt[ order(BoomerTweets.bicnt$t, decreasing=T), ]
GenZTweets.bicnt$t <- with(GenZTweets.bicnt, mapply(GZTtscore, bi.cnt, cnt.1, cnt.2, GenZTweets.N))
GenZTweets.bicnt <- GenZTweets.bicnt[ order(GenZTweets.bicnt$t, decreasing=T), ]
MillennialTweets.bicnt$t <- with(MillennialTweets.bicnt, mapply(MLTtscore, bi.cnt, cnt.1, cnt.2, MillennialTweets.N))
MillennialTweets.bicnt <- MillennialTweets.bicnt[ order(MillennialTweets.bicnt$t, decreasing=T), ]
BoomerSearchResults.bicnt$t <- with(BoomerSearchResults.bicnt, mapply(BSRtscore, bi.cnt, cnt.1, cnt.2, BoomerSearchResults.N))
BoomerSearchResults.bicnt <- BoomerSearchResults.bicnt[ order(BoomerSearchResults.bicnt$t, decreasing=T), ]
GenZSearchResults.bicnt$t <- with(GenZSearchResults.bicnt, mapply(GZSRtscore, bi.cnt, cnt.1, cnt.2, GenZSearchResults.N))
GenZSearchResults.bicnt <- GenZSearchResults.bicnt[ order(GenZSearchResults.bicnt$t, decreasing=T), ]
MillennialSearchResults.bicnt$t <- with(MillennialSearchResults.bicnt, mapply(MLSRtscore, bi.cnt, cnt.1, cnt.2, MillennialSearchResults.N))
MillennialSearchResults.bicnt <- MillennialSearchResults.bicnt[ order(MillennialSearchResults.bicnt$t, decreasing=T), ]
GoogleScholar.bicnt$t <- with(GoogleScholar.bicnt, mapply(GStscore, bi.cnt, cnt.1, cnt.2, GoogleScholar.N))
GoogleScholar.bicnt <- GoogleScholar.bicnt[ order(GoogleScholar.bicnt$t, decreasing=T), ]
BoomerTweetsTScoreFINAL__df <- head( BoomerTweets.bicnt[ BoomerTweets.bicnt$bi.cnt < 20, c("t","bi.cnt","cnt.1","cnt.2","bigram") ], 20)
GenZTweetsTScoreFINAL__df <- head( GenZTweets.bicnt[ GenZTweets.bicnt$bi.cnt < 20, c("t","bi.cnt","cnt.1","cnt.2","bigram") ], 20)
MillennialTweetsTScoreFINAL__df <- head( MillennialTweets.bicnt[ MillennialTweets.bicnt$bi.cnt < 20, c("t","bi.cnt","cnt.1","cnt.2","bigram") ], 20)
BoomerSearchResultsTScoreFINAL__df <- head( BoomerSearchResults.bicnt[ BoomerSearchResults.bicnt$bi.cnt < 20, c("t","bi.cnt","cnt.1","cnt.2","bigram") ], 20)
GenZSearchResultsTScoreFINAL__df <- head( GenZSearchResults.bicnt[ GenZSearchResults.bicnt$bi.cnt < 20, c("t","bi.cnt","cnt.1","cnt.2","bigram") ], 20)
MillennialSearchResultsTScoreFINAL__df <- head( MillennialSearchResults.bicnt[ MillennialSearchResults.bicnt$bi.cnt < 20, c("t","bi.cnt","cnt.1","cnt.2","bigram") ], 20)
GoogleScholarTScoreFINAL__df <- head( GoogleScholar.bicnt[ GoogleScholar.bicnt$bi.cnt < 20, c("t","bi.cnt","cnt.1","cnt.2","bigram") ], 20)
## KEYNESS ##
# load the readtext and quanteda libraries
library(readtext)
library(quanteda)
# read in all the docs in the Gutenberg folder
all_data <- readtext("*.txt")
# create a "corpus" type data structure
data_corpus <- corpus(all_data)
# find the author name from each file's filename and make this a new column
docvars(data_corpus, "Data Type") <- gsub("[.-].*$", "", rownames(data_corpus$documents))
# create a document feature matrix, i.e., how many times does each word appear in each document
data_dfm <- dfm(data_corpus, groups = "Data Type", remove_punct = TRUE, remove_numbers = TRUE, remove_symbols = TRUE)
data_counts<- as.data.frame(textstat_frequency(data_dfm))
# calculate frequencies (i.e., proportions), rather than counts
total_words <- sum(data_counts$frequency)
frequency_norm <- data_counts$frequency/total_words # proportion for each word
data_counts$frequency_norm <- frequency_norm # make new column in gut counts
# Top ten keywords in each set, ranked by log-likelihood "keyness" metric,
# using the rest of the data as the baseline
head(textstat_keyness(data_dfm, target = "BoomerTweets", measure = "lr"), 20)
head(textstat_keyness(data_dfm, target = "GenZTweets", measure = "lr"), 20)
head(textstat_keyness(data_dfm, target = "MillennialTweets", measure = "lr"), 20)
head(textstat_keyness(data_dfm, target = "BoomerSearchResults", measure = "lr"), 20)
head(textstat_keyness(data_dfm, target = "GenZSearchResults", measure = "lr"), 20)
head(textstat_keyness(data_dfm, target = "MillennialSearchResults", measure = "lr"), 20)
head(textstat_keyness(data_dfm, target = "GoogleScholar", measure = "lr"), 20)
# recalculate the document feature matrix, this time excluding stop words
datax_dfm <- dfm(data_corpus, groups = "Data Type", remove = stopwords("english"), remove_punct = TRUE, remove_numbers = TRUE, remove_symbols = TRUE)
BoomerTweetsKeynessFINAL__df <- head(textstat_keyness(datax_dfm, target = "BoomerTweets", measure = "lr"), 20)
GenZTweetsKeynessFINAL__df <- head(textstat_keyness(datax_dfm, target = "GenZTweets", measure = "lr"), 20)
MillennialTweetsKeynessFINAL__df <- head(textstat_keyness(datax_dfm, target = "MillennialTweets", measure = "lr"), 20)
BoomerSearchResultsKeynessFINAL__df <- head(textstat_keyness(datax_dfm, target = "BoomerSearchResults", measure = "lr"), 20)
GenZSearchResultsKeynessFINAL__df <- head(textstat_keyness(datax_dfm, target = "GenZSearchResults", measure = "lr"), 20)
MillennialSearchResultsKeynessFINAL__df <- head(textstat_keyness(datax_dfm, target = "MillennialSearchResults", measure = "lr"), 20)
GoogleScholarKeynessFINAL__df <- head(textstat_keyness(datax_dfm, target = "GoogleScholar", measure = "lr"), 20)
## making tables
library(gridExtra)
png(filename = "FINALMITABLES.png", width=1500,height=1500)
grid.arrange(tableGrob(BoomerTweetsMIFINAL__df),tableGrob(GenZTweetsMIFINAL__df),tableGrob(MillennialTweetsMIFINAL__df),tableGrob(BoomerSearchResultsMIFINAL__df),tableGrob(GenZSearchResultsMIFINAL__df),tableGrob(MillennialSearchResultsMIFINAL__df),tableGrob(GoogleScholarMIFINAL__df))
dev.off()
png(filename = "FINALTScoreTABLES.png", width=1500,height=1500)
grid.arrange(tableGrob(BoomerTweetsTScoreFINAL__df),tableGrob(GenZTweetsTScoreFINAL__df),tableGrob(MillennialTweetsTScoreFINAL__df),tableGrob(BoomerSearchResultsTScoreFINAL__df),tableGrob(GenZSearchResultsTScoreFINAL__df),tableGrob(MillennialSearchResultsTScoreFINAL__df),tableGrob(GoogleScholarTScoreFINAL__df))
dev.off()
png(filename = "FINALKeynessTABLES.png", width=1500,height=1500)
grid.arrange(tableGrob(BoomerTweetsKeynessFINAL__df),tableGrob(GenZTweetsKeynessFINAL__df),tableGrob(MillennialTweetsKeynessFINAL__df),tableGrob(BoomerSearchResultsKeynessFINAL__df),tableGrob(GenZSearchResultsKeynessFINAL__df),tableGrob(MillennialSearchResultsKeynessFINAL__df),tableGrob(GoogleScholarKeynessFINAL__df))
dev.off()
##
png(filename = "BoomerTweetsMIFINAL.png", height = 50*nrow(BoomerTweetsMIFINAL__df), width = 200*ncol(BoomerTweetsMIFINAL__df))
grid.table((BoomerTweetsMIFINAL__df))
dev.off()
png(filename = "GenZTweetsMIFINAL.png", height = 50*nrow(GenZTweetsMIFINAL__df), width = 200*ncol(GenZTweetsMIFINAL__df))
grid.table((GenZTweetsMIFINAL__df))
dev.off()
png(filename = "MillennialTweetsMIFINAL.png", height = 50*nrow(MillennialTweetsMIFINAL__df), width = 200*ncol(MillennialTweetsMIFINAL__df))
grid.table((MillennialTweetsMIFINAL__df))
dev.off()
png(filename = "BoomerSearchResultsMIFINAL.png", height = 50*nrow(BoomerSearchResultsMIFINAL__df), width = 200*ncol(BoomerSearchResultsMIFINAL__df))
grid.table((BoomerSearchResultsMIFINAL__df))
dev.off()
png(filename = "GenZSearchResultsMIFINAL.png", height = 50*nrow(GenZSearchResultsMIFINAL__df), width = 200*ncol(GenZSearchResultsMIFINAL__df))
grid.table((GenZSearchResultsMIFINAL__df))
dev.off()
png(filename = "MillennialSearchResultsMIFINAL.png", height = 50*nrow(MillennialSearchResultsMIFINAL__df), width = 200*ncol(MillennialSearchResultsMIFINAL__df))
grid.table((MillennialSearchResultsMIFINAL__df))
dev.off()
png(filename = "GoogleScholarMIFINAL.png", height = 50*nrow(GoogleScholarMIFINAL__df), width = 200*ncol(GoogleScholarMIFINAL__df))
grid.table((GoogleScholarMIFINAL__df))
dev.off()
#
png(filename = "BoomerTweetsTScoreFINAL.png", height = 50*nrow(BoomerTweetsTScoreFINAL__df), width = 200*ncol(BoomerTweetsTScoreFINAL__df))
grid.table((BoomerTweetsTScoreFINAL__df))
dev.off()
png(filename = "GenZTweetsTScoreFINAL.png", height = 50*nrow(GenZTweetsTScoreFINAL__df), width = 200*ncol(GenZTweetsTScoreFINAL__df))
grid.table((GenZTweetsTScoreFINAL__df))
dev.off()
png(filename = "MillennialTweetsTScoreFINAL.png", height = 50*nrow(MillennialTweetsTScoreFINAL__df), width = 200*ncol(MillennialTweetsTScoreFINAL__df))
grid.table((MillennialTweetsTScoreFINAL__df))
dev.off()
png(filename = "BoomerSearchResultsTScoreFINAL.png", height = 50*nrow(BoomerSearchResultsTScoreFINAL__df), width = 200*ncol(BoomerSearchResultsTScoreFINAL__df))
grid.table((BoomerSearchResultsTScoreFINAL__df))
dev.off()
png(filename = "GenZSearchResultsTScoreFINAL.png", height = 50*nrow(GenZSearchResultsTScoreFINAL__df), width = 200*ncol(GenZSearchResultsTScoreFINAL__df))
grid.table((GenZSearchResultsTScoreFINAL__df))
dev.off()
png(filename = "MillennialSearchResultsTScoreFINAL.png", height = 50*nrow(MillennialSearchResultsTScoreFINAL__df), width = 200*ncol(MillennialSearchResultsTScoreFINAL__df))
grid.table((MillennialSearchResultsTScoreFINAL__df))
dev.off()
png(filename = "GoogleScholarTScoreFINAL.png", height = 50*nrow(GoogleScholarTScoreFINAL__df), width = 200*ncol(GoogleScholarTScoreFINAL__df))
grid.table((GoogleScholarTScoreFINAL__df))
dev.off()
#
png(filename = "BoomerTweetsKeynessFINAL.png", height = 50*nrow(BoomerTweetsKeynessFINAL__df), width = 200*ncol(BoomerTweetsKeynessFINAL__df))
grid.table((BoomerTweetsKeynessFINAL__df))
dev.off()
png(filename = "GenZTweetsKeynessFINAL.png", height = 50*nrow(GenZTweetsKeynessFINAL__df), width = 200*ncol(GenZTweetsKeynessFINAL__df))
grid.table((GenZTweetsKeynessFINAL__df))
dev.off()
png(filename = "MillennialTweetsKeynessFINAL.png", height = 50*nrow(MillennialTweetsKeynessFINAL__df), width = 200*ncol(MillennialTweetsKeynessFINAL__df))
grid.table((MillennialTweetsKeynessFINAL__df))
dev.off()
png(filename = "BoomerSearchResultsKeynessFINAL.png", height = 50*nrow(BoomerSearchResultsKeynessFINAL__df), width = 200*ncol(BoomerSearchResultsKeynessFINAL__df))
grid.table((BoomerSearchResultsKeynessFINAL__df))
dev.off()
png(filename = "GenZSearchResultsKeynessFINAL.png", height = 50*nrow(GenZSearchResultsKeynessFINAL__df), width = 200*ncol(GenZSearchResultsKeynessFINAL__df))
grid.table((GenZSearchResultsKeynessFINAL__df))
dev.off()
png(filename = "MillennialSearchResultsKeynessFINAL.png", height = 50*nrow(MillennialSearchResultsKeynessFINAL__df), width = 200*ncol(MillennialSearchResultsKeynessFINAL__df))
grid.table((MillennialSearchResultsKeynessFINAL__df))
dev.off()
png(filename = "GoogleScholarKeynessFINAL.png", height = 50*nrow(GoogleScholarKeynessFINAL__df), width = 200*ncol(GoogleScholarKeynessFINAL__df))
grid.table((GoogleScholarKeynessFINAL__df))
dev.off()
### END ###
# $Content?
# write.table(BoomerTweets,"BoomerTweets.txt",sep = "\n",row.names = FALSE,col.names = FALSE)
# write.table(GenZTweets,"GenZTweets.txt",sep = "\n",row.names = FALSE,col.names = FALSE)
# write.table(MillennialTweets,"MillennialTweets.txt",sep = "\n",row.names = FALSE,col.names = FALSE)
# write.table(BoomerSearchResults,"BoomerSearchResults.txt",sep = "\n",row.names = FALSE,col.names = FALSE)
# write.table(GenZSearchResults,"GenZSearchResults.txt",sep = "\n",row.names = FALSE,col.names = FALSE)
# write.table(MillennialSearchResults,"MillennialSearchResults.txt",sep = "\n",row.names = FALSE,col.names = FALSE)
# write.table(GoogleScholar,"GoogleScholar.txt",sep = "\n",row.names = FALSE,col.names = FALSE)
###
# BoomerTweets <- tolower(scan("BoomerTweets.txt", what="c", sep="\n"))
# BoomerTweets <- unlist(strsplit(BoomerTweets, "[^a-z'-]"))
# BoomerTweets <- grep("[a-z]", BoomerTweets, value=T)
# BoomerTweets.cnt <- sort(table(BoomerTweets), decreasing=T)
# delete earlier text changes, delete links, find MI, keyness, etc.
# BoomerTweets.txt <- scan("BoomerTweets.txt", what="list")
# GenZTweets.txt <- scan("GenZTweets.txt", what="list")
# MillennialTweets.txt <- scan("MillennialTweets.txt", what="c")
# BoomerSearchResults.txt <- scan("BoomerSearchResults.txt", what="c")
# GenZSearchResults.txt <- scan("GenZSearchResults.txt", what="c")
# MillennialSearchResults.txt <- scan("MillennialSearchResults.txt", what="c")
# GoogleScholar.txt <- scan("GoogleScholar.txt", what="c")
# BoomerTweets <- grep("[0-9]", BoomerTweets, value=T, invert=T)
# BoomerTweets.txt <- gsub("[^a-zA-Z ]", "", BoomerTweets.txt)
# corpus?? maybe not
# BoomerTweets_corpus <- makecorpus(BoomerTweets)
# MillennialTweets_corpus <- makecorpus(MillennialTweets)
# GenZTweets_corpus <- makecorpus(GenZTweets)
# BoomerTweets_corpus <- removestopwords(BoomerTweets_corpus)
# MillennialTweets_corpus <- removestopwords(MillennialTweets_corpus)
# GenZTweets_corpus <- removestopwords(GenZTweets_corpus)
# data.frame(text = sapply(myCorpus, as.character), stringsAsFactors = FALSE)
